Notes on IP2.5c
R. Fearing
Jan. 14, 2013

General
_________

Left = motor A = pidObj[0] = encoder[0]

dfmem/mpu6000
_____________

These devices share SPI2. Thus they cannot run on on their own DMA interrupts,
and are in effect scheduled by Timer 5 Int (steering servo.c).
Note that mpu6000 gyro should not be read except in Timer 5 Int, as conflicts on
SPI2 could cause deadlock.
dfmem writing seems to take less time than steering servo.
With 1 MHz SCLK (limit of mpu6000 from data sheet), get whole steering servo time of 
100 us. dfmemsync takes 111 us.

Duncan runs at faster clock: in mpu6000.c
// Set up SCK frequency of 13.333Mhz for 40 MIPS
    SPI_CON1bits.SPRE = 0b100; // Secondary prescale 3:1
    SPI_CON1bits.PPRE = 0b11; // Primary prescale 1:1

If there is a read error in telemetry readback, CPU will go into flashing LED error
state until reset

Analog to Digital Conversion
____________________________

10 bit mode

triggers on PWM

chan 0 only
1 word of dma buffer for each input

neg input is VREFL


pid-ip2.5
_________________________

K_EMF = A/D units per 2^16 * (rev/ms) (~43)

Kd velocity gain is scaled by 16




